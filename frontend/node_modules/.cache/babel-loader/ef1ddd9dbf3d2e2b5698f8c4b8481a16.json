{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/ToggleLightMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Toggle from 'react-toggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleLightMode = () => {\n  _s();\n\n  const [isLight, setIsLight] = useState(true);\n  return /*#__PURE__*/_jsxDEV(Toggle, {\n    className: \"LightToggle\",\n    checked: isLight,\n    onChange: event => setIsLight(event.target.checked),\n    icons: {\n      checked: \"ðŸ”†\",\n      unchecked: \"ðŸŒ™\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToggleLightMode, \"smLIetuMejGDhy38p5uB8U3Q3n0=\");\n\n_c = ToggleLightMode;\nexport default ToggleLightMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleLightMode\");","map":{"version":3,"sources":["/frontend/src/components/ToggleLightMode.tsx"],"names":["React","useState","Toggle","ToggleLightMode","isLight","setIsLight","event","target","checked","unchecked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,IAAD,CAArC;AACA,sBACI,QAAC,MAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,OAAO,EAAEG,OAFb;AAGI,IAAA,QAAQ,EAAEE,KAAK,IAAKD,UAAU,CAACC,KAAK,CAACC,MAAN,CAAaC,OAAd,CAHlC;AAII,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAG,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;GAAMN,e;;KAAAA,e;AAcN,eAAeA,eAAf","sourcesContent":["import React, {useState} from 'react';\nimport Toggle from 'react-toggle';\nimport { useMediaQuery } from \"react-responsive\";\n\nconst ToggleLightMode = () => {\n\n    const [isLight,setIsLight] = useState(true);\n    return (\n        <Toggle\n            className=\"LightToggle\"\n            checked={isLight}\n            onChange={event  => setIsLight(event.target.checked)}\n            icons={{ checked:  \"ðŸ”†\", unchecked: \"ðŸŒ™\"}}\n        />\n    )\n\n}\n\nexport default ToggleLightMode"]},"metadata":{},"sourceType":"module"}