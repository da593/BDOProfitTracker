{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/CustomLightModeButton/ToggleDarkMode.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Toggle from 'react-toggle';\nimport { useMediaQuery } from \"react-responsive\";\nimport \"react-toggle/style.css\";\nimport { BsMoon } from \"react-icons/bs\";\nimport { BsSun } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleDarkMode = () => {\n  _s();\n\n  const [isDark, setIsDark] = useState(true);\n  const value = useMemo(() => isDark === undefined ? !!systemPrefersDark : isDark, [isDark, systemPrefersDark]);\n  const systemPrefersDark = useMediaQuery({\n    query: '(prefers-color-scheme: dark)'\n  }, undefined, isSystemDark => setIsDark(isSystemDark));\n  useEffect(() => {\n    if (value) {\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-light-mode\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BsSun, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      className: \"dark-toggle\",\n      checked: isDark,\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setIsDark(target.checked);\n      },\n      icons: false,\n      \"aria-label\": \"Dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BsMoon, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ToggleDarkMode, \"urCvh06wTmfKa46uxnlO3W5S9e0=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = ToggleDarkMode;\nexport default ToggleDarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleDarkMode\");","map":{"version":3,"sources":["/frontend/src/components/CustomLightModeButton/ToggleDarkMode.jsx"],"names":["React","useState","useEffect","useMemo","Toggle","useMediaQuery","BsMoon","BsSun","ToggleDarkMode","isDark","setIsDark","value","undefined","systemPrefersDark","query","isSystemDark","document","body","classList","add","remove","target","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,OAAlC,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,wBAAP;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,IAAD,CAAnC;AACA,QAAMU,KAAK,GAAGR,OAAO,CAAC,MAAMM,MAAM,KAAKG,SAAX,GAAuB,CAAC,CAACC,iBAAzB,GAA6CJ,MAApD,EAA2D,CAACA,MAAD,EAASI,iBAAT,CAA3D,CAArB;AAEA,QAAMA,iBAAiB,GAAGR,aAAa,CACrC;AACES,IAAAA,KAAK,EAAE;AADT,GADqC,EAIrCF,SAJqC,EAKpCG,YAAD,IAAkBL,SAAS,CAACK,YAAD,CALU,CAAvC;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAJ,EAAW;AACTK,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,MAA5B;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,MAA/B;AACD;AACF,GANQ,EAMN,CAACT,KAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACI,MAAA,SAAS,EAAC,aADd;AAEI,MAAA,OAAO,EAAEF,MAFb;AAGI,MAAA,QAAQ,EAAE;AAAA,YAAC;AAACY,UAAAA;AAAD,SAAD;AAAA,eAAcX,SAAS,CAACW,MAAM,CAACC,OAAR,CAAvB;AAAA,OAHd;AAII,MAAA,KAAK,EAAE,KAJX;AAKI,oBAAW;AALf;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBH,CAvCD;;GAAMd,c;UAIwBH,a;;;KAJxBG,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React, {useState,useEffect,useMemo} from 'react';\nimport Toggle from 'react-toggle';\nimport { useMediaQuery } from \"react-responsive\";\nimport \"react-toggle/style.css\"\nimport { BsMoon } from \"react-icons/bs\";\nimport { BsSun } from \"react-icons/bs\";\n\nconst ToggleDarkMode = () => {\n    const [isDark,setIsDark] = useState(true);\n    const value = useMemo(() => isDark === undefined ? !!systemPrefersDark : isDark,[isDark, systemPrefersDark])\n\n    const systemPrefersDark = useMediaQuery(\n      {\n        query: '(prefers-color-scheme: dark)',\n      },\n      undefined,\n      (isSystemDark) => setIsDark(isSystemDark)\n    );\n\n    useEffect(() => {\n      if (value) {\n        document.body.classList.add('dark');\n      } else {\n        document.body.classList.remove('dark');\n      }\n    }, [value]);\n\n    return (\n      <div className=\"toggle-light-mode\">\n        <div>\n          <BsSun className=\"icon\"/>\n        </div>\n        <Toggle\n            className=\"dark-toggle\"\n            checked={isDark}\n            onChange={({target}) => setIsDark(target.checked)}\n            icons={false}\n            aria-label=\"Dark mode\"\n        />\n        <div>\n          <BsMoon className=\"icon\"/>\n        </div>\n      </div>\n       \n    )\n\n}\n\nexport default ToggleDarkMode"]},"metadata":{},"sourceType":"module"}