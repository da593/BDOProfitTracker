
# Define services
services:

  mysql:
    image: mysql:5.7
    restart: always
    # Create a volume named marketplace-data and store them in Docker virtual hard drive (typically /var/lib/docker/volumes)
    volumes:
      - marketplace-data:/var/lib/mysql
      - ./fakesqldata:/docker-entrypoint-initdb.d #mount SQL data to entrypoint to be executed on container startup
    env_file:
      - ./project/.env.dev
    #MYSQL DB takes time to init, provide healthcheck to services that need to connect to MYSQL first before it can come up
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -u root -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  django-mysql:
    build: 
      context: project
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    # Create a volume in the working directory to update when code changes
    volumes:
      - ./project:/project
    env_file:
      - ./project/.env.dev
    depends_on:
      mysql:
        condition: service_healthy
        restart: true


  frontend:
    build: 
      context: frontend
      target: development
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    env_file:
      - ./frontend/.env.dev
    environment:
      CHOKIDAR_USEPOLLING: "true"

# Create a volume for the database to be stored 
volumes:
  marketplace-data: